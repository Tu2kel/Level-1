const readline = require("readline-sync") // IMPORTS READLINE MODULE / ASSIGNS IT TO READLINE WITH REQUIRE FUNCTION


//#region CONST TO DECLARE THE VARIABLE USERNAME TO STORE USER with USERNAME + LOG GREETING 
const userName = readline.question("State your name = ");
console.log(userName + "!" + " You've Escaped the Escape Room, ONLY to Start the REALü©∏Game");
//#endregion

//#region INTRO PROMPTS USER FOR INPUT   
readline.question( // BECAUSE STEP 4 WAS UTILIZED / LOOKING BACK "REUSED CODE" TO FURTHER THIS ONE
  "ü§° As a Software Engineer you should be familiar with Polya's Process." +
    ":" + " Press Enter" 
    
);

readline.question(
  "ü§° If you can't manage to Solve the Problem..." + ":" + " Press Enter"
  );
  
  readline.question(
    "ü§° Will You Escape with YOUR LIFE?" + ":" + " Press Enter"
    );
    
    readline.question(
      "ü§° What is the extent you will go through in order to Survive? " +
        ":" +
        " Press Enter"
    );

      readline.question(
        " Your Killers for this EVENING... Mark Hoffman: SAW 3, 4, 5, 6, and SAW 3D " + "Logan Nelson: Jigsaw " + " and the Pinnacle of SAW - John Kramer AKA JIGSAW! " + "..Dare to Press Enter: "
      );

            readline.question(
              "ü§° LIVE or DIE...Make Your Choice" + ":" + " Press Enter"
            );

//#endregion

//#region Values / STATS

//ALL VARIABLES ARE GLOBAL SET OUTSIDE A FUNCTION CAN BE USED THROUGH OUT ENTIRE CODE IN VARIOUS FUNCTIONS
enemyAlive = true
isAlive = true; // UNDER WHILE LOOP >  ALLOWS PLAYER TO CONTINUE WITH CHOICES; IF FALSE GAME COMPLETES 
const moves = [1, 2, 3, 4, 5]; //‚úÖ STORED ARRAY IN MOVES VARIABLE
const weapons = [ " ShotGun Full of Ammo ", " Machete ", " Bruce_Lee_Video_Tapes ",]; 
const enemies = ["Logan_Nelson " , "Jigsaw, " , "Mark_Hoffman "];
const items = ['PreCorp_Pillz PCPüòâ', 'ShotGunüí•', 'Macheteüî™'];

const inventory = []; //EMPTY ARRAY TO STORE  / PUSH ITEMS INTO 

let playerHP = 100;

maxDamage = 25;
minDamage = 5;

let enemyHP = 20;



// #endregion

 //#region ENEMY ENCOUNTER  //‚úÖ
function enemyAction(){ //‚úÖ

    fight = true 
    //GENERATING ENEMY 
    const random = Math.floor(Math.random() * enemies.length)  //DELCARED VAR RANDOM TO GENERATE INTEGERS 0/1 * NUMBER OF THE ENEMIES[] 
    const enemy = enemies[random] // STORES THE INDEXED ENEMY FROM RANDOM[] 

    //GENERATING ITEM AS PRIZE
    const prize = items[Math.floor(Math.random() * items.length)];//DELCARED VAR PRIZE TO GENERATE INTEGERS 0/1 * NUMBER OF THE ITEMS[]
    
    //RANDOMIZING AP/HP
    
        

    while (fight === true){ // WHILE FIGHT STRICTLY EQUAL TO TRUE...CODE RUNS UNTIL FIGHT VALUE IS FALSE

          const enemyAP = Math.floor(Math.random() * (maxDamage - minDamage + 1) + minDamage) // MAX / MIN ARE GENERATED THEN SUBTRACTED +1 TO THE VALUE 
          const playerOneHittaQuitta = Math.floor(Math.random() * (maxDamage - minDamage + 1)) + minDamage;
          const superSaiyan = playerHP + enemyAP // TAKES THE ENEMYAP ADD TO PLAYERHP TO GIVE NEW HP VALUE OF SUPERSAYIAN    
          const thriller =  enemyHP + playerOneHittaQuitta // SAME BUT FOR THE VILLIAN
          


      let decision = readline.keyIn( enemy + " üê∑ is after you" 
                  + " Press 'p' to print status:"  
                  + " Press 'r' üèÉüèΩüí®üçÉto run:" 
                  + " Press 'a' ü•∑üèΩüëäüèΩ to Attack: " 
                  + " Press 'q' to QUIT! ");
      
    
      if (decision === 'a'){ // EXEUCTES UPON KEYIN FUNCTON STRICTLY EQUALED TO CORRESPONDING LETTER 
            console.log('You chose to Kick his ass');
            enemyHP -= playerOneHittaQuitta;
          

          console.log( userName + ' attacked  üê∑ ' + enemy + ' with ' + playerOneHittaQuitta + ' Attack Points.');

          playerHP -= enemyAP;
          console.log( enemy + ' üê∑ attacked you with ' + enemyAP + ' Attack Points.');

          if (enemyHP <= 0 && enemyAlive === true) { // ü§î COULD I HAVE USED FIGHT === TRUE TO END CODE
              console.log(userName + ' Killed this MF üê∑...for Now ' + '.\n' + enemy + ' left behind: ' + prize ); // needs to randomize loot
              console.log("You SURVIVED! with " + superSaiyan + ' HP ' + playerOneHittaQuitta + ' AP and GAINED ' + prize);
              fight = false; // FIGHT LOOP ENDS 
              enemyAlive = false; // ENEMY DIES TO END FIGHT LOOP
                

              const items = Math.random();// RADOMIZE ITEMS []

                if (items <= 0.9) { // 90% CHANCE OF GAINING ITEMS
                    inventory.push(prize); // PUSHES PRIZES TO INVENTORY []
                    
                }
                  } else if (playerHP <= 0 && isAlive === true) {
                      console.log(enemy + " üê∑üî™ Killed Your Ass ü©∏!GAMEü§°OVER!ü©∏");
                      fight = false
                      isAlive = false;
                  }
         
                  
        
      } 
        else if (decision === 'p'){
                        console.log('Print Inventory');
                  
                        console.log(userName + ' HP is now ' + superSaiyan);
                        '/n'  
                        console.log(enemy + ' HP is now ' + thriller);
                        '/n' 
                        console.log(`Items: ` +  inventory + prize + ' are stored in Inventory');
                        '/n' 
                        console.log(superSaiyan + ' playerHP');
        }

              else if (decision === 'r'){ 
                console.log(' üèÉüèΩüí®üçÉ');
                const escapePlan = 0.5;
                if (Math.random() < escapePlan ) {
                  console.log('You escaped this round ');
                  fight = false;
                }
        
         
        }
        else if (decision === 'q') {
          console.log('ü§° There seems to be no QUITTING in this ü©∏!GAME!üî™ü©∏');
        }

        else {
          console.log(` Escape? Lol, Don't Be ridiculous`);
          console.log(`You have ` + superSaiyan + ` HP left`);
            console.log(enemy + `has `+ thriller +  ` HP left`);

        } 

      }

    }


  

//#endregion

//#region WALK / RUN START OF MY HUMOR CODE

while (isAlive === true) { // ‚úÖ
    choice = readline.keyIn(
    userName + " Press 'w' üö∂üèΩto walk:" + " Press 's' üèÉüèΩüí®üçÉto Sprint:"  );
    
  
    if (choice === "w"  ) { // ‚úÖ
         let index = readline.keyInSelect(moves, " How many steps forward " + "= ");
         
         console.log(userName + " Nervously üò® moved " + moves[index] + " step(s)" + " forward" ); 
         walks() // INVOKES THE WALKS FUNCTION TO RUN
            
        }
  
        else if (choice === "s") { //‚úÖ
              console.log("Running üèÉüèΩüí®üçÉ Scared ")
              
              walks()// INVOKES THE WALKS FUNCTION TO RUN
          }
   
  //HIDDEN EXIT SIMULATION ONLY WHEN PROMPTED IN CHOICES area w r a 

                  else if (choice == "x" && isAlive == true ) { //‚úÖ
                    console.log("üö∂üèΩüí® Leaving the Game...ü©∏Too Frightened to Continueü©∏");
                    isAlive = false;
          }
         
}

   //#endregion    

// #region WALKS OR RUNS INTO WEAPON BOX

// HUMOR CODE WALK === SURVIVE / SPRINT === DEATH LOL

function walks(){ //‚úÖ
    const random = Math.floor(Math.random() * 10) + 1;
      if(random <= 4){
          enemyAction()
          

      }
          else if (random <= 8 ) { //‚úÖ NUMBER HIGH FOR CHANCE TO APPEAR AND RUN THIS FUNCTION
            console.log( userName + " üòÆ walks into a Box and finds a: " + weapons );
            
            const index = readline.keyInSelect(weapons, "Choose one:" );//Syntax , after not +
                if (index === 0) {
                  console.log(weapons[0]);
                    shotty();
                    inventory.push(weapons[0])

                  } 
                  else if (index === 1) {
                      
                      console.log(weapons[1]);
                      knife();
                      inventory.push(weapons[1])
                  }

                    else if (index === 2) { // DOES NOTHING BUT LOGS
                      console.log(weapons[2] + " but Noü§¶üèΩVCR" + ' throws tapes, then runs back and grabs them');
                      // tapes()
                      inventory.push(weapons[2])
                      
                  }
                  

                  } 
                  
            
  }
  //#endregion

//#region SHOTTY AND KNIFE WORKS ONCE BOX IS FOUND THEN 'w' / 's'
  function shotty (){ //‚úÖ
            if (isAlive == true && choice == "w") {
                console.log(userName + ' chose the ' + "ShotGun " + 'and is walking while aiming down the hall ')
            }
            else if (isAlive == true && choice == "s") {
              console.log(userName + ' Hears a noise; Pulls The Trigger. üí• ü©∏!GAMEüê∑OVER!ü©∏ ' + userName + " Didn't Check the barrel now " + userName + 's Face is blown All Over the Roomü©∏');
              isAlive = false;
            }
    }

    function knife() { //‚úÖ
      if (isAlive == true && choice == "w") {
        console.log(userName + ' has the ' + "Machete " +  'and moving frantically')
        
      }
      else if (isAlive == true && choice == "s") {
        console.log(userName + " Hears a sound and Sprints Off Running... ü©∏!GAMEüê∑OVER!ü©∏ " + userName + " trips on TripWire and the Machete Pierces in thru the neck and out the back of the Skull ");
        isAlive = false
      }
                
    }
    
        
//#endregion


